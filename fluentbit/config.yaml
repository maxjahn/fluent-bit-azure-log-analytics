apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: log-test
  labels:
    k8s-app: fluent-bit
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020
    @INCLUDE input-kubernetes.conf
    @INCLUDE filter-kubernetes.conf
    @INCLUDE output.conf

  output.conf: |
    [OUTPUT]
        Name            azure
        Match           kube.var.log.containers.logapp*.*
        Customer_ID     ${WorkspaceId}
        Shared_Key      ${SharedKey}
        Log_Type        ${LogName}

  input-kubernetes.conf: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              /var/log/containers/*.log
        Parser            cri
        DB                /var/log/flb_kube.db
        Mem_Buf_Limit     5MB
        Skip_Long_Lines   Off
        Refresh_Interval  10

    [INPUT]
        Name tail 
        Path              /var/log/containers/logapp-type1*.log
        Tag  kyc
        Parser json


    [INPUT]
        Name tail 
        Path              /var/log/containers/logapp-type2*.log
        Tag  crq
        Parser json

     [INPUT]
        Name tail 
        Path              /var/log/containers/logapp-type3*.log
        Tag  karte
        Parser json

  filter-kubernetes.conf: |
    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix     kube.var.log.containers.
        Merge_Log           On
        Merge_Log_Trim      On
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude Off
        Annotations         Off
        Labels              On

    [FILTER]
        Name          nest
        Match         kube.*
        Operation     lift
        Nested_under  kubernetes
        Add_prefix    kubernetes_

    [FILTER]
        Name          nest
        Match         kube.*
        Operation     lift
        Nested_under  kubernetes_labels
        Add_prefix    kubernetes_labels_

    [FILTER]
        Name Lua
        Match kyc
        script mappings.lua
        call map_fields_kyc


    [FILTER]
        Name Lua
        Match crq
        script mappings.lua
        call map_fields_crq

    [FILTER]
        Name Lua
        Match karte
        script mappings.lua
        call map_fields_karte

  parsers.conf: |
    [PARSER]
        Name        json
        Format      json
        Time_Key    time
        Time_Format %d/%b/%Y:%H:%M:%S %z
        Time_Keep   Off

    [PARSER]
        Name        syslog
        Format      regex
        Regex       ^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
        Time_Key    time
        Time_Format %b %d %H:%M:%S

    [PARSER]
        Name        cri
        Format      regex
        Regex       ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z

    [PARSER]
        Name docker
        Format json
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep Off

  mappings.lua: |
     function map_fields_kyc (tag, timestamp, record)
        new_record = {}
        new_record["tag"] = tag
        new_record["thread"] = record["thread_name"]
        new_record["level"] = record["level"]
        new_record["logger"] = record["logger_name"]
        new_record["message"] = record["message"]
        -- new_record["original"] = record
        
        return 1, timestamp, new_record 
      end

      function map_fields_crq (tag, timestamp, record)
        new_record = {}
        new_record["tag"] = tag
        new_record["thread"] = record["Thread"]
        new_record["level"] = record["Severity"]
        new_record["logger"] = record["LoggerName"]
        new_record["message"] = record["message"]
        -- new_record["original"] = record
        
        return 1, timestamp, new_record 
      end

      function map_fields_karte (tag, timestamp, record)
        new_record = {}
        new_record["tag"] = tag
        new_record["thread"] = record["threadName"]
        new_record["level"] = record["level"]
        new_record["logger"] = record["loggerName"]
        new_record["message"] = record["message"]
        -- new_record["original"] = record
        
        return 1, timestamp, new_record 
      end
